exit
$nu.config-path
vim .config/nushell/config.nu
nvim .config/nushell/config.nu
^starship 
^starship completions
starship completions nu
starship completions nushell
starship init
starship init nushell
starship init nu
ls
ls -a
vim .config/nushell/config.nu
nvim .config/nushell/config.nu
ls vendor
ls $PREFIX/
ls ../usr
vim .config/nushell/config.nu
nvim .config/nushell/config.nu
$nu.data-dir
ls $nu.data-dir
ls ($nu.data-dir)
$nu.data-dir
vim .config/nushell/config.nu
nvim .config/nushell/config.nu
$env.PREFIX
exit
vim .termux/colors.properties
nvim .config/nushell/config.nu
vim
exit
vim
exit
vim .config/nvim/lua/plugins/treesitter.lua
vim .config/nushell/config.nu
exit
starship completions nushell
starship completions nushell > ~/.config/nushell/env.nu
starship completions nushell | print
starship completions nushell | print | append ~/.config/nushell/env.nu
vim .config/nushell/env.nu
print -h
cat --help
starship completions nushell | cat > ~/.config/nushell/env.nu
starship completions nushell | print | ^ cat > ~/.config/nushell/env.nu
starship completions nushell | print | ^cat > ~/.config/nushell/env.nu
vim .config/nushell/env.nu
starship completions nushell | print 
starship completions nushell | print | save ~/.config/nushell/env.nu --append
ls ~
starship completions nushell | tee { save --append ~/.config/nushell/env.nu }
vim .config/nushell/env.nu
save -h
tee -h
exit
vim .config/nushell/env.nu
exit
$PATH
$env.PATH
$env.PATH.is_empty()
vim $nu.env-path
starship completions nushell | bat
vim $nu.env-path
starship completions nushell | tee { save ~/.config/nushell/env.nu }
save -h
starship completions nushell | print | save ~/.config/nushell/env.nu }
starship completions nushell | print | save ~/.config/nushell/env.nu 
starship completions nushell | print | save { ~/.config/nushell/env.nu }
starship completions nushell | print
$nu.env-path
starship completions nushell | print | append $"$nu.env-path"
starship completions nushell | print | save $"$nu.env-path"
starship completions nushell |  save $"$nu.env-path"
vim $nu.env-path
starship completions nushell | tee { save $"$nu.env-path" }
starship completions nushell | tee somefile.txt
starship completions nushell | save somefile.txt
vim somefile.txt
cat somefile.txt
save -h
cat somefile.txt | save $"$nu.env-path"
cat somefile.txt | save -f $"$nu.env-path"
vim $nu.env-path
$nu.env-path
cat somefile.txt | save /data/data/com.termux/files/home/.config/nushell/env.nu
cat somefile.txt | save /data/data/com.termux/files/home/.config/nushell/env.nu --force
vim $nu.env-path
exit
exit
$env.PREFIX | is_empty
$env.PREFIX | is-empty
is-empty -h
vim .termux/colors.properties
termux-reload-settings 
vim .termux/colors.properties
termux-reload-settings 
vim .termux/colors.properties
termux-reload-settings 
vim .termux/colors.properties
termux-reload-settings 
vim .termux/colors.properties
exit
$env.PREFIX | is-empty
is-empty -h
vim .termux/colors.properties
cp .termux/colors.properties termux-dotfiles/.termux/
cd termux-dotfiles/
ls
git status
git add .termux/colors.properties
git commit -m "Fix oxocarbon theme in Termux"
git push origin main
cd
cd .termux/
ls
exit
cd storage/downloads
ls
7z x JetBrainsMono.zip -o*
cd JetBrainsMono/
ls
^ls | grep Regular
cat README.md
^ls | grep Regular
cp JetBrainsMonoNerdFontMono-Regular.ttf ~/.termux/font.ttf
cd
exit
cd termux-dotfiles/
ls
cd ..
cd git
ls
cd rustlings/
ls
cd
cd storage
cd downloads
ls
cp TerminessNerdFontMono-Regular.ttf ~/.termux/font.ttf
edit
exit
termux-reload-settings 
exit
termux-style
exit
vim .termux/colors.properties
vim .termux/font.ttf
ls
cd .termux/
ls
vim colors.properties
cp ../termux-dotfiles/.termux/colors.properties .
termux-reload-settings 
ls
vim colors.properties
exit
vim .termux/colors.properties
exit
vim .termux/colors.properties
exit
termux-reload-settings 
ls
rm .termux/font.ttf
exit
vim .termux/colors.properties
ls
exit
cd reference/
ls
cd ..
ls
cd termux-dotfiles/
ls
cd
cp storage/downloads/TerminessNerdFontMono-Regular.ttf .termux/font.ttf
exit
cd termux-dotfiles/
ls
vim .termux/colors.properties
exit
ls
vim .termux/colors.properties
cp termux-dotfiles/.termux/colors.properties .termux/colors.properties
vim .termux/colors.properties
exit
vim storage/downloads/jetbrains_mono/fonts/HwEnglishfonts.xml
vim storage/downloads/jetbrains_mono/fonts/online_variable_fonts.xml
vim storage/downloads/jetbrains_mono/fonts/HwEnglishfonts.xml
cd storage/downloads/jetbrains_mono/fonts/
ls
rm *.ttf
cp ../../JetBrainsMono/JetBrainsMonoNerdFontMono* .
ls
cp HwEnglishfonts.xml online_variable_fonts.xml
vim online_variable_fonts.xml
cd
exit
cd termux-dotfiles/
ls
exit
cd jetbrains
which cd
cd storage jetbrains
cd storage/downloads/jetbrains_mono/fonts/
ls
cd
z storage jetb
,
z
cd -h
cd down
zoxide init nushell
vim $nu.env-path
vim storage/downloads/jetbrains_mono/fonts/HwEnglishfonts.xml
cd storage/downloads/jetbrains_mono/fonts/
cp HwEnglishfonts.xml online_variable_fonts.xml
exit
cd storage/downloads/jetbrains_mono/fonts/
vim storage/downloads/jetbrains_mono/fonts/HwEnglishfonts.xml
vim HwEnglishfonts.xml
cp HwEnglishfonts.xml online_variable_fonts.xml
exit
cd storage/downloads/jetbrains_mono/fonts/
vim HwEnglishfonts.xml
cp HwEnglishfonts.xml online_variable_fonts.xml
cd ..
ls
rm jetbrains_mono.hwt
ls
tldr 7z
7z a -tzip jetbrainsmono-nfm *
ls
exit
cd termux-dotfiles/
ls
cd
exit
vim .termux/colors.properties
cp termux-dotfiles/.termux/colors.properties .termux/colors.properties
exit
pkg update && pkg upgrade
pkg update ; pkg upgrade
vim .config/nvim/lua/plugins/treesitter.lua
vim .config/nvim/lua/plugins/nvim-lspconfig.lua
vim $nu.env-path
vim .config/nvim/lua/plugins/treesitter.lua
cp -r ~/.config/nvim termux-dotfiles/
cd termux-dotfiles/
git status
git add nvim/lua/plugins/nvim-lspconfig.lua
git commit -m "Add nushell to LSP config"
git add nvim/lazy-lock.json
git commit -m "(updated plugins..)"
git add nvim/lua/plugins/treesitter.lua
git commit -m "Auto-install w/ Treesitter"
git push origin main
exit
vim $nu.env-path
pkg search carapace
pkg i carapace
vim $nu.env-path
vim $nu.config-path
exit
cd termux-dotfiles/
ls
cd
zoxide init nushell
man zoxide-init
print zoxide init nushell | save -f ~/.zoxide.nu
vim $nu.env-path
vim $nu.config-path
vim .zoxide.nu 
vim $nu.env-path
man zoxide-init
vim $nu.env-path
vim $nu.config-path
exit
which cd
cp -r ~/.config/nvim termux-dotfiles/
cd termux-dotfiles/
__zoxide_z 
pkg i zoxide
vim $nu.config-path
vim .zoxide.nu 
vim $nu.config-path
$env.PATH
which zoxide
ls $env.PREFIX/bin/
ls $env.PREFIX/bin
ls $env.PREFIX
ls $($env.PREFIX)
ls $"($env.PREFIX)"
ls $"($env.PREFIX)/bin"
ls $"($env.PREFIX)/bin" | grep zoxide
ls $"($env.PREFIX)/bin" | where zoxide
where --help
where name == "zoxide"
ls $"($env.PREFIX)/bin" | where name == "zoxide"
ls $"($env.PREFIX)/bin" | where name =~ "zoxide"
z
cd
__zoxide_z 
vim $nu.env-path
z
exit
z
exit
zoxide --version
nu --version
vim $nu.env-path
z
cd
rm .zoxide.nu
vim .zoxide.nu 
exit
cd
vim .zoxide.nu 
ls .cargo/bin/
ls .cache/
"__zoxide_z"
"__zoxide_z" s
"__zoxide_z"
__zoxide_z 
vim .zoxide.nu 
cd $path
vim .zoxide.nu 
vim $nu.env-path
exit
vim $nu.env-path
exit
z
zoxide --version
vim $nu.env-path
"/data/data/com.termux/files/home/.cargo/bin" | save $env.PATH --append
"/data/data/com.termux/files/home/.cargo/bin" | save $"(env.PATH)" --append
"/data/data/com.termux/files/home/.cargo/bin" | save $"($env.PATH)" --append
vim $nu.env-path
$env.PATH
exit
$env.PATH
vim $nu.env-path
git clone https://github.com/ajeetdsouza/zoxide.git
cd zoxide/
vim $nu.env-path
rm .zoxide.nu
exit
cd zoxide/
vim .zoxide.nu 
^cd zoxide/
cd
which cd
vim .zoxide.nu 
vim $nu.config-path
dxit
exit
cd zoxide/
ls
cargo install zoxide --locked
pkg uninstall zoxide 
zoxide --version
exit
zoxide --version
z
z storage/
ls
z
vim $nu.env-path
pkg install zoxide
exit
z
z storage/
z
pkg uninstall zoxide 
vim $nu.env-path
$nu.env-path
$env.PATH
exit
vim $nu.env-path
man zoxide-init
vim $nu.env-path
vim $nu.config-path
exit
cdi storage/
cd storage
vim $nu.config-path
exit
z
cd
vim $nu.config-path
vim $nu.env-path
exit
z
z storage/
exit
vim $nu.env-path
mkdir .local/bin
ls .local/
vim $nu.env-path
vim $nu.config-path
exit
cd
vim $nu.config-path
vim $nu.env-path
exig
exit
vim $nu.env-path
vim $nu.config-path
exit
which cd
cd storage
termux-info
vim $nu.env-path
vim $nu.config-path
^cd .termux/
exit
^cd .termux/
vim .zoxide.nu 
vim $nu.env-path
rm .zoxide.nu
vim .zoxide.nu 
exit
cd
vim .zoxide.nu 
rm .zoxide.nu
vim .zoxide.nu 
exit
cd
vim $nu.config-path
exit
cd
cd storage
which cd
exit
cd
exit
ls .termux/font.ttf
cp storage/downloads/IosevkaNerdFontMono-Regular.ttf .termux/font.ttf
termux-reload-settings 
exit
ls
vim
cp storage/downloads/CousineNerdFontMono-Regular.ttf .termux/font.ttf
vim $nu.config-path
cp storage/downloads/IosevkaNerdFontMono-Regular.ttf .termux/font.ttf
exit
cp termux-dotfiles/.termux/colors.properties .termux/colors.properties
termux-reload-settings 
exit
vim .termux/colors.properties 
termux-reload-settings 
cp storage/downloads/IosevkaNerdFontMono-Regular.ttf .termux/font.ttf
exit
ls
exit
vim .termux/colors.properties 
termux-reload-settings 
ls
exit
ls
vim .termux/colors.properties 
exit
vim .termux/colors.properties 
pkg search r language
rm .config/nvim/lua/plugins/colors.lua
bat .termux/colors.properties 
cat .termux/colors.properties 
vim .config/nvim/lua/plugins/mini.lua 
exit
vim .config/nvim/lua/plugins/mini.lua 
exit
vim .config/nvim/lua/plugins/mini.lua 
vim .termux/colors.properties 
vim .config/nvim/lua/plugins/mini.lua 
exit
vim .config/nvim/lua/plugins/mini.lua 
exit
vim .config/nvim/lua/plugins/mini.lua 
vim .config/nvim/lua/plugins/colors.lua
vim .config/nvim/lua/plugins/mini.lua 
vim .config/nvim/lua/plugins/colors.lua
exit
vim .config/nvim/lua/plugins/colors.lua
vim .config/nvim/lua/opts.lua 
vim .config/nvim/lua/plugins/mini.lua 
rm .config/nvim/lua/plugins/colors.lua
vim .config/nvim/lua/plugins/mini.lua 
vim .config/nvim/lua/plugins/colors.lua
exit
vim .config/nvim/lua/plugins/colors.lua
exit
vim .config/nvim/lua/plugins/colors.lua
vim .config/nvim/lua/opts.lua 
vim .config/nvim/lua/plugins/colors.lua
cp -r ~/.config/nvim termux-dotfiles/
cd termux-dotfiles/
lazygit
cp -r .termux .
cp ../.termux/ .
cd .
cd ..
cp -r .termux termux-dotfiles/
cd termux-dotfiles/
vim .termux/colors.properties 
exit
lazygit
exit
help set
set
$env.PATH
vim .local/bin/mpv
cd storage/downloads
ls .mp4
ls *.mp4
ls
^ls
mpv "003. [macOS] Intro to Terminal.mp4" 
exit
cd storage/downloads
mpv "003. [macOS] Intro to Terminal.mp4" 
ls
$env.PATH
cd
vim .local/bin/
chsh 
exut
exit
cd storage/downloads
mpv "003. [macOS] Intro to Terminal.mp4" 
cd
mpv "/sdcard/Download/003. [macOS] Intro to Terminal.mp4" 
exit
appops
exit
vim .local/bin/
exit
vim hello.rs 
vim $nu.config-path
vim $nu.env-path
exit
nvim
echo $SHELL
ld
ls
cd rustlings/
l
vim exercises/02_functions/functions3.rs 
rustlings
vim exercises/02_functions/functions5.rs 
rustlings
vim exercises/02_functions/functions5.rs 
rustlings
exit
cd rustlings/
vim exercises/02_functions/functions5.rs 
rustlings
vim exercises/02_functions/functions5.rs 
exit
cp -r ~/.config/nvim termux-dotfiles/
cd termux-dotfiles/
ls
cd ..
vim .config/nvim/lua/plugins/colors.lua
vim .config/nvim/lua/plugins/treesitter.lua 
cp -r ~/.config/nvim termux-dotfiles/
cd termux-dotfiles/
git status
git add nvim/lua/plugins/treesitter.lua
lazygit
vim $nu.env-path
vim $nu.config-path
$nu.env-path
$nu.env-path | cat
cd ..
